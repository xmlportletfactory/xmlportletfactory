
#set( $createPath = "${webModuleBasePackagePath}/web" )
#set( $createName = "/${classDef_name}Comparator.java" )
#parse("/Resources/VelocityTemplates_common/PortletFiles/macro_GetSetFieldName.vm")

package ${basePackage}.web;

import java.util.Date;

import com.liferay.portal.kernel.util.OrderByComparator;
import ${basePackage}.model.${classDef_name};
#set ($fields = $application.getFileDef().getFields().getFieldArray())
#foreach($field in $fields)
#if(${field.isSetValidation()})
#foreach($validationTable in $applications)
#if(${validationTable.getClassDef().getName()}==${field.getValidation().getClassName()})
import ${basePackage}.service.${validationTable.getClassDef().getName()}LocalServiceUtil;
#end
#end
#end
#end

public class ${classDef_name}Comparator {

	public static String ORDER_BY_ASC =  " ASC";
	public static String ORDER_BY_DESC = " DESC";

	public static OrderByComparator get${classDef_name}OrderByComparator(String orderByCol,String orderByType) {

		boolean orderByAsc = false;
		if(orderByType==null) {
			orderByAsc = true;
		} else if (orderByType.trim().equalsIgnoreCase(ORDER_BY_ASC.trim())){
			orderByAsc = true;
		}

		OrderByComparator orderByComparator = null;
#set ($i =0)
#set ($fields = $application.getFileDef().getFields().getFieldArray())
#foreach($field in $fields)
	#set ( $i = $i + 1)
	#set ($arrayIter = ${i} - 1)
	#if($i == 1)
		if(orderByCol==null) {
			orderByComparator = new OrderBy${classDef_name}#GetSetFieldName($i)(orderByAsc);
	#end
#if(${field.getType().isSetInt()}=="true" || ${field.getType().isSetLong()}=="true" || ${field.getType().isSetNumeric()}=="true" || ${field.getType().isSetFloat()}=="true" || ${field.getType().isSetDate()}=="true" || ${field.getType().isSetDatetime()}=="true" || ${field.getType().isSetVarchar()}=="true")
		} else if(orderByCol.equals("${field.getName()}")){
			orderByComparator = new OrderBy${classDef_name}#GetSetFieldName($i)(orderByAsc);
#end
#end
	    }
	    return orderByComparator;
	}
}

#set ($i =0)
#set ($fields = $application.getFileDef().getFields().getFieldArray())
#foreach($field in $fields)
#set ( $i = $i + 1)
#set ($arrayIter = ${i} - 1)
#if(${field.getType().isSetInt()}=="true")
class OrderBy${classDef_name}#GetSetFieldName($i) extends OrderByComparator {
	public static String ORDER_BY_FIELD = "${field.getName()}";

	public OrderBy${classDef_name}#GetSetFieldName($i)(){
		this(false);
	}

	public OrderBy${classDef_name}#GetSetFieldName($i)(boolean asc){
		_asc = asc;
	}

	@Override
	public int compare(Object o1,Object o2) {

		int i1 = 0;
		int i2 = 0;

		if(o1!=null) return 1;
		else if (i1 < i2) return -1;
		return 0;
	}

	@Override
	public String[] getOrderByFields() {
		String[] orderByFields = new String[1];
		orderByFields[0] = ORDER_BY_FIELD;
		return orderByFields;
	}

	@Override
	public String getOrderBy() {
		if(_asc) return ORDER_BY_FIELD + ${classDef_name}Comparator.ORDER_BY_ASC;
		else return ORDER_BY_FIELD + ${classDef_name}Comparator.ORDER_BY_DESC;
	}

	private boolean _asc;
}

#elseif(${field.getType().isSetLong()}=="true")
class OrderBy${classDef_name}#GetSetFieldName($i) extends OrderByComparator {
	public static String ORDER_BY_FIELD = "${field.getName()}";

	public OrderBy${classDef_name}#GetSetFieldName($i)(){
		this(false);
	}

	public OrderBy${classDef_name}#GetSetFieldName($i)(boolean asc){
		_asc = asc;
	}

	@Override
	public int compare(Object o1,Object o2) {

		Long lo1 = 0L;
		Long lo2 = 0L;

		if(o1!=null) lo1 = (Long)o1;
		if(o2!=null) lo2 = (Long)o2;

#if(${field.isSetValidation()})
/*
*
*      Sorting in case of a validation field.
*
*/
		if (o1!=null && o2!=null){
			try {
#set ($val_fun=$field.getValidation().getOrderByField().substring(0,1).toUpperCase()+$field.getValidation().getOrderByField().substring(1))
#foreach($validationTable in $applications)
#if(${validationTable.getClassDef().getName()}==${field.getValidation().getClassName()})
				String s01 = ${validationTable.getClassDef().getName()}LocalServiceUtil.get${validationTable.getClassDef().getName()}(lo1).get${val_fun}();
				String s02 = ${validationTable.getClassDef().getName()}LocalServiceUtil.get${validationTable.getClassDef().getName()}(lo2).get${val_fun}();

				return s01.compareTo(s02);
#end
#end				

			} catch (Exception e) {
				e.printStackTrace();
			}
		}
#end
		return lo1.compareTo(lo2);
	}

	@Override
	public String[] getOrderByFields() {
		String[] orderByFields = new String[1];
		orderByFields[0] = ORDER_BY_FIELD;
		return orderByFields;
	}

	@Override
	public String getOrderBy() {
		if(_asc) return ORDER_BY_FIELD + ${classDef_name}Comparator.ORDER_BY_ASC;
		else return ORDER_BY_FIELD + ${classDef_name}Comparator.ORDER_BY_DESC;
	}

	private boolean _asc;
}

#elseif(${field.getType().isSetNumeric()}=="true")
class OrderBy${classDef_name}#GetSetFieldName($i) extends OrderByComparator {
	public static String ORDER_BY_FIELD = "${field.getName()}";

	public OrderBy${classDef_name}#GetSetFieldName($i)(){
		this(false);
	}

	public OrderBy${classDef_name}#GetSetFieldName($i)(boolean asc){
		_asc = asc;
	}

	@Override
	public int compare(Object o1,Object o2) {

		Long lo1 = 0L;
		Long lo2 = 0L;

		if(o1!=null) lo1 = (Long)o1;
		if(o2!=null) lo2 = (Long)o1;

		return lo1.compareTo(lo2);
	}

	@Override
	public String[] getOrderByFields() {
		String[] orderByFields = new String[1];
		orderByFields[0] = ORDER_BY_FIELD;
		return orderByFields;
	}

	@Override
	public String getOrderBy() {
		if(_asc) return ORDER_BY_FIELD + ${classDef_name}Comparator.ORDER_BY_ASC;
		else return ORDER_BY_FIELD + ${classDef_name}Comparator.ORDER_BY_DESC;
	}

	private boolean _asc;
}

#elseif(${field.getType().isSetFloat()}=="true")
class OrderBy${classDef_name}#GetSetFieldName($i) extends OrderByComparator {
	public static String ORDER_BY_FIELD = "${field.getName()}";

	public OrderBy${classDef_name}#GetSetFieldName($i)(){
		this(false);
	}

	public OrderBy${classDef_name}#GetSetFieldName($i)(boolean asc){
		_asc = asc;
	}

	@Override
	public int compare(Object o1,Object o2) {

		Long lo1 = 0L;
		Long lo2 = 0L;

		if(o1!=null) lo1 = (Long)o1;
		if(o2!=null) lo2 = (Long)o1;

		return lo1.compareTo(lo2);
	}

	@Override
	public String[] getOrderByFields() {
		String[] orderByFields = new String[1];
		orderByFields[0] = ORDER_BY_FIELD;
		return orderByFields;
	}

	@Override
	public String getOrderBy() {
		if(_asc) return ORDER_BY_FIELD + ${classDef_name}Comparator.ORDER_BY_ASC;
		else return ORDER_BY_FIELD + ${classDef_name}Comparator.ORDER_BY_DESC;
	}

	private boolean _asc;
}

#elseif(${field.getType().isSetDate()}=="true")
class OrderBy${classDef_name}#GetSetFieldName($i) extends OrderByComparator {
	public static String ORDER_BY_FIELD = "${field.getName()}";

	public OrderBy${classDef_name}#GetSetFieldName($i)(){
		this(false);
	}

	public OrderBy${classDef_name}#GetSetFieldName($i)(boolean asc){
		_asc = asc;
	}

	@Override
	public int compare(Object o1,Object o2) {

		Date date1 = new Date();
		Date date2 = new Date();

		if(o1!=null) date1 = (Date)o1;
		if(o2!=null) date2 = (Date)o2;

		return date1.compareTo(date2);
	}

	@Override
	public String[] getOrderByFields() {
		String[] orderByFields = new String[1];
		orderByFields[0] = ORDER_BY_FIELD;
		return orderByFields;
	}

	@Override
	public String getOrderBy() {
		if(_asc) return ORDER_BY_FIELD + ${classDef_name}Comparator.ORDER_BY_ASC;
		else return ORDER_BY_FIELD + ${classDef_name}Comparator.ORDER_BY_DESC;
	}

	private boolean _asc;
}

#elseif(${field.getType().isSetDatetime()}=="true")
class OrderBy${classDef_name}#GetSetFieldName($i) extends OrderByComparator {
	public static String ORDER_BY_FIELD = "${field.getName()}";

	public OrderBy${classDef_name}#GetSetFieldName($i)(){
		this(false);
	}

	public OrderBy${classDef_name}#GetSetFieldName($i)(boolean asc){
		_asc = asc;
	}

	@Override
	public int compare(Object o1,Object o2) {

		Date date1 = new Date();
		Date date2 = new Date();

		if(o1!=null) date1 = (Date)o1;
		if(o2!=null) date2 = (Date)o2;

		return date1.compareTo(date2);
	}

	@Override
	public String[] getOrderByFields() {
		String[] orderByFields = new String[1];
		orderByFields[0] = ORDER_BY_FIELD;
		return orderByFields;
	}

	@Override
	public String getOrderBy() {
		if(_asc) return ORDER_BY_FIELD + ${classDef_name}Comparator.ORDER_BY_ASC;
		else return ORDER_BY_FIELD + ${classDef_name}Comparator.ORDER_BY_DESC;
	}

	private boolean _asc;
}

#elseif(${field.getType().isSetVarchar()}=="true")
class OrderBy${classDef_name}#GetSetFieldName($i) extends OrderByComparator {
	public static String ORDER_BY_FIELD = "${field.getName()}";

	public OrderBy${classDef_name}#GetSetFieldName($i)(){
		this(false);
	}

	public OrderBy${classDef_name}#GetSetFieldName($i)(boolean asc){
		_asc = asc;
	}

	@Override
	public int compare(Object o1,Object o2) {

		String str1 = "";
		String str2 = "";

		if(str1!=null) str1 = (String)o1;
		if(str2!=null) str2 = (String)o1;

		return str1.compareTo(str2);
	}

	@Override
	public String[] getOrderByFields() {
		String[] orderByFields = new String[1];
		orderByFields[0] = ORDER_BY_FIELD;
		return orderByFields;
	}

	@Override
	public String getOrderBy() {
		if(_asc) return ORDER_BY_FIELD + ${classDef_name}Comparator.ORDER_BY_ASC;
		else return ORDER_BY_FIELD + ${classDef_name}Comparator.ORDER_BY_DESC;
	}

	private boolean _asc;
}
#end
#end



