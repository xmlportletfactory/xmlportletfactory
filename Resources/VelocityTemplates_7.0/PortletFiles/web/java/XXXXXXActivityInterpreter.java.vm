#set( $targetFile = "${webModuleBasePackagePath}/web/social/${classDef_name}ActivityInterpreter.java")
#parse("/Resources/VelocityTemplates_common/PortletFiles/macro_GetSetFieldName.vm")

#if ($generateActivity)
package ${basePackage}.web.social;

import ${basePackage}.model.${classDef_name};
import ${basePackage}.service.${classDef_name}LocalServiceUtil;
import ${basePackage}.service.permission.${classDef_name}EntryPermission;
import com.liferay.portal.kernel.util.StringPool;
#if ($hasWorkflow)
import com.liferay.portal.kernel.workflow.WorkflowConstants;	
#end
import com.liferay.portal.security.permission.ActionKeys;
import com.liferay.portal.security.permission.PermissionChecker;
import com.liferay.portal.theme.ThemeDisplay;
import com.liferay.portlet.social.model.BaseSocialActivityInterpreter;
import com.liferay.portlet.social.model.SocialActivity;
import com.liferay.portlet.social.model.SocialActivityFeedEntry;

/**
 * @author ${author}
 * @author Davide N.P. Rossi.
 */
 
public class ${classDef_name}ActivityInterpreter extends BaseSocialActivityInterpreter {

	public String[] getClassNames() {

        return _CLASS_NAMES;
    }
	
	@Override
    protected SocialActivityFeedEntry doInterpret(
            SocialActivity activity, ThemeDisplay themeDisplay)
        throws Exception {

        PermissionChecker permissionChecker =
            themeDisplay.getPermissionChecker();

        ${classDef_name} ${classDef_name}Pk =
            ${classDef_name}LocalServiceUtil.get${classDef_name}(
                activity.getClassPK());

        if (!${classDef_name}EntryPermission.contains(
		permissionChecker, ${classDef_name}Pk, ActionKeys.VIEW)) {

            return null;
        }
        
        String creatorUserName = getUserName( 
        		activity.getUserId(), themeDisplay);
        
        // Link

        String link = StringPool.BLANK;

        // Title
        
        String title = StringPool.BLANK;

#if ($hasWorkflow)
		int status = ${classDef_name}Pk.getStatus();	
	
		if (WorkflowConstants.STATUS_APPROVED != status && activity.getType() == ${classDef_name}ActivityKeys.ADD_${classDef_name.toUpperCase()}) {
        	title = themeDisplay.translate(
            "activity-${fileDef_name.toLowerCase()}-added-record-pending-approval", 
            new Object[] {creatorUserName});	
        } 
        else {
        	if (activity.getType() == ${classDef_name}ActivityKeys.ADD_${classDef_name.toUpperCase()}) {
        		title = themeDisplay.translate(
        			"activity-${fileDef_name.toLowerCase()}-added-record", 
        			new Object[] {creatorUserName});
        	}
        	else if (activity.getType() == ${classDef_name}ActivityKeys.UPDATE_${classDef_name.toUpperCase()}) {
        		title = themeDisplay.translate(
        			"activity-${fileDef_name.toLowerCase()}-updated-record", 
        			new Object[] {creatorUserName});
        	}
        }        
#else
        
        if (activity.getType() == ${classDef_name}ActivityKeys.ADD_${classDef_name.toUpperCase()}) {
        	title = themeDisplay.translate(
        		"activity-${fileDef_name.toLowerCase()}-added-record", 
        		new Object[] {creatorUserName});
        }
        else if (activity.getType() == ${classDef_name}ActivityKeys.UPDATE_${classDef_name.toUpperCase()}) {
        	title = themeDisplay.translate(
        		"activity-${fileDef_name.toLowerCase()}-updated-record", 
        		new Object[] {creatorUserName});
        }
#end

    	// Body

        String body = StringPool.BLANK;

        return new SocialActivityFeedEntry(link, title, body);
    }
	
	private static final String[]_CLASS_NAMES = new String[] {
	    ${classDef_name}.class.getName()
	};
}
#else
#*
     As there are no activity services defined, no file will be generated 
*#
#set ($createFile=false)
#end
