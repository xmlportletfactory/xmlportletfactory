#set( $targetFile = "${serviceModuleBasePackagePath}/service/permission/${classDef_name}EntryPermission.java" )

package ${basePackage}.service.permission;

import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.security.auth.PrincipalException;
import com.liferay.portal.kernel.security.permission.PermissionChecker;

import ${basePackage}.model.${classDef_name};
import ${basePackage}.service.${classDef_name}LocalServiceUtil;

#if ($hasWorkflow)
import com.liferay.portal.kernel.workflow.permission.WorkflowPermissionUtil;
#end

/**
 * @author Juan Gonzalez P. 
 */
public class ${classDef_name}EntryPermission {

	public static void check(
			PermissionChecker permissionChecker, ${classDef_name} entry,
			String actionId)
		throws PortalException {

		if (!contains(permissionChecker, entry, actionId)) {
			throw new PrincipalException();
		}
	}

	public static void check(
			PermissionChecker permissionChecker, long entryId, String actionId)
		throws PortalException, SystemException {

		if (!contains(permissionChecker, entryId, actionId)) {
			throw new PrincipalException();
		}
	}

	public static boolean contains(
		PermissionChecker permissionChecker, ${classDef_name} entry,
		String actionId) {		
## TODO
		return true;
		/*
		
#if ($hasWorkflow)
		if (entry.isPending()) {
			Boolean hasPermission = WorkflowPermissionUtil.hasPermission(
				permissionChecker, entry.getGroupId(),
				${classDef_name}.class.getName(), entry.getPrimaryKey(), actionId);

			if (hasPermission != null) {
				return hasPermission.booleanValue();
			}
		}
#end

		if (permissionChecker.hasOwnerPermission(
				entry.getCompanyId(), ${classDef_name}.class.getName(),
				entry.getPrimaryKey(), entry.getUserId(), actionId)) {

			return true;
		}

		return permissionChecker.hasPermission(
			entry.getGroupId(), ${classDef_name}.class.getName(), entry.getPrimaryKey(),
			actionId);
			
		*/	
	}

	public static boolean contains(
			PermissionChecker permissionChecker, long entryId, String actionId)
		throws PortalException, SystemException {

		${classDef_name} entry = ${classDef_name}LocalServiceUtil.get${classDef_name}(entryId);

		return contains(permissionChecker, entry, actionId);
	}
}
